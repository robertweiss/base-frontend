// Helper functions

@function get-font-size($name) {
    @return rem(map-get($fontSize, $name));
}

@function fs($name) {
    @return get-font-size($name);
}

@function get-breakpoint($name) {
    @return em(map-get($breakpoint, $name));
}

@function bp($name) {
    @return get-breakpoint($name);
}


// Value converter

@function rem($size) {
    $remSize: $size / 16;

    @return #{$remSize}rem;
}

@function em($size) {
    $emSize: $size / 16;

    @return #{$emSize}em;
}

// MiMa Mixin for responsive single values
// e.G. @include mima(font-size, copy, lead, sm, big);
// Variable object keys are found in _variables.scss

@mixin mima($name, $minVal, $maxVal, $minWidthVar: 'smb', $maxWidthVar: 'max') {
    @if $name == 'font-size' and type-of($minVal) != 'number' {
        $minVal: map-get($fontSize, $minVal) / 16;
        $maxVal: map-get($fontSize, $maxVal) / 16;
    }
    $diffVal: $maxVal - $minVal;
    $minWidth: map-get($breakpoint, $minWidthVar) / 16;
    $maxWidth: map-get($breakpoint, $maxWidthVar) / 16;
    $diffWidth: $maxWidth - $minWidth;
    #{$name}: calc(#{$minVal}rem + #{$diffVal} * ((100vw - #{$minWidth}rem) / #{$diffWidth}));

    @media (max-width: calc(#{$minWidth}em - .001em)) {
        #{$name}: #{$minVal}rem;
    }

    @media (min-width: #{$maxWidth}em) {
        #{$name}: #{$maxVal}rem;
    }
}


// Media Queries

@mixin mq($type, $val1, $val2: null) {
    $allowedMqTypes: (min, max, min-h, max-h, min-max, minmax, min-max-h, minmax-h);
    @if (index($allowedMqTypes, $type) == null) { @error 'Media Query Typ "#{$type}" wurde nicht gefunden'; }

    @if type-of($val1) != 'number' { $val1: map-get($breakpoint, $val1); }
    $val1: $val1 / 16;
    @if $type == max or $type == max-h { $val1: $val1 - .001; }

    @if $type == min-max or $type == minmax or $type == min-max-h or $type == minmax-h {
        @if ($val2 == null) { @error 'Angabe f√ºr $val2 fehlt'; }

        @if type-of($val2) != 'number' { $val2: map-get($breakpoint, $val2); }
        $val2: #{$val2 / 16 - .001};
    }

    @if $type == min {
        @media (min-width: #{$val1}em) { @content; }
    }
    @else if $type == max {
        @media (max-width: #{$val1}em) { @content; }
    }
    @else if $type == min-h {
        @media (min-height: #{$val1}em) { @content; }
    }
    @else if $type == max-h {
        @media (max-height: #{$val1}em) { @content; }
    }
    @else if $type == min-max or $type == minmax {
        @media (min-width: #{$val1}em) and (max-width: #{$val2}em) { @content; }
    }
    @else if $type == min-max-h or $type == minmax-h {
        @media (min-height: #{$val1}em) and (max-height: #{$val2}em) { @content; }
    }
}
